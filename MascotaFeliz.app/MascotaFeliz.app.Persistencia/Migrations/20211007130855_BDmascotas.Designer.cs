// <auto-generated />
using System;
using MascotaFeliz.app.Persistencia.AppData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MascotaFeliz.app.Persistencia.Migrations
{
    [DbContext(typeof(EfAppContext))]
    [Migration("20211007130855_BDmascotas")]
    partial class BDmascotas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("MascotaFeliz.app.Dominio.Entidades.CentroVeterinario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nit")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CentrosVeterinarios");
                });

            modelBuilder.Entity("MascotaFeliz.app.Dominio.Entidades.Mascota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ColorOjos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorPiel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estatura")
                        .HasColumnType("int");

                    b.Property<int>("IdPropietario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<string>("Raza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoAnimalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoAnimalId");

                    b.ToTable("Mascotas");
                });

            modelBuilder.Entity("MascotaFeliz.app.Dominio.Entidades.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("MascotaFeliz.app.Dominio.Entidades.RegistroVisita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EstadoAnimo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FrecuenciaCardiaca")
                        .HasColumnType("int");

                    b.Property<int>("FrecuenciaRespiratoria")
                        .HasColumnType("int");

                    b.Property<int>("IdVisitaProgramada")
                        .HasColumnType("int");

                    b.Property<string>("Medicamentos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<string>("Recomendacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Temperatura")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RegistrosVisitas");
                });

            modelBuilder.Entity("MascotaFeliz.app.Dominio.Entidades.TipoAnimal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposAnimales");
                });

            modelBuilder.Entity("MascotaFeliz.app.Dominio.Entidades.VisitaProgramada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Fecha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdMascota")
                        .HasColumnType("int");

                    b.Property<int>("IdMedico")
                        .HasColumnType("int");

                    b.Property<int>("IdPropietario")
                        .HasColumnType("int");

                    b.Property<int?>("TipoAnimalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoAnimalId");

                    b.ToTable("VisitasProgramadas");
                });

            modelBuilder.Entity("MascotaFeliz.app.Dominio.Entidades.Medico", b =>
                {
                    b.HasBaseType("MascotaFeliz.app.Dominio.Entidades.Persona");

                    b.Property<int?>("EspecializacionId")
                        .HasColumnType("int");

                    b.Property<int>("NitCentroVeterinario")
                        .HasColumnType("int");

                    b.Property<int>("TarjetaProfesional")
                        .HasColumnType("int");

                    b.HasIndex("EspecializacionId");

                    b.HasDiscriminator().HasValue("Medico");
                });

            modelBuilder.Entity("MascotaFeliz.app.Dominio.Entidades.Propietario", b =>
                {
                    b.HasBaseType("MascotaFeliz.app.Dominio.Entidades.Persona");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Propietario");
                });

            modelBuilder.Entity("MascotaFeliz.app.Dominio.Entidades.Mascota", b =>
                {
                    b.HasOne("MascotaFeliz.app.Dominio.Entidades.TipoAnimal", "TipoAnimal")
                        .WithMany()
                        .HasForeignKey("TipoAnimalId");

                    b.Navigation("TipoAnimal");
                });

            modelBuilder.Entity("MascotaFeliz.app.Dominio.Entidades.VisitaProgramada", b =>
                {
                    b.HasOne("MascotaFeliz.app.Dominio.Entidades.TipoAnimal", "TipoAnimal")
                        .WithMany()
                        .HasForeignKey("TipoAnimalId");

                    b.Navigation("TipoAnimal");
                });

            modelBuilder.Entity("MascotaFeliz.app.Dominio.Entidades.Medico", b =>
                {
                    b.HasOne("MascotaFeliz.app.Dominio.Entidades.TipoAnimal", "Especializacion")
                        .WithMany()
                        .HasForeignKey("EspecializacionId");

                    b.Navigation("Especializacion");
                });
#pragma warning restore 612, 618
        }
    }
}
